{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-jodie-core-src-templates-homepage-query-tsx-d00612be9f1c8c53455f.js","mappings":"wQA6FA,EAlDiD,SAAC,GAWhD,IAXmF,IAAD,IAAhCA,KAAQC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,SAC3DC,EAAQ,kBAAOF,EAAMG,QAAb,OAAuBF,EAASE,QACxCC,GAAQC,EAAAA,EAAAA,GAAWH,GACnBI,EAAaF,EAAMG,OACrBC,EAAU,EAGRC,GAAOC,EAAAA,EAAAA,WAEPC,EAAyB,OAAhBF,EAAKE,OAAL,IAA2BF,EAAKE,OAAW,GAEjDC,EAAI,EAAGA,EAAIN,EAAYM,IAAK,CAInC,GAAiB,IAHAN,EAAaE,GAGQ,KAFjBF,EAAa,GAAKE,EAGrC,MAGFA,GAAW,EAGb,OACE,QAAC,IAAD,MACE,cAAIK,GAAIC,EAAAA,EAAgB,cAAY,cACjCC,EAAAA,EAAAA,OAEH,eAAKC,UAAS,oBAAuBH,GAAII,EAAAA,IACvC,eAAKD,UAAS,gBAAkBR,GAC7BJ,EAAMG,OAAS,EACdH,EAAMc,KAAI,SAACC,EAAMC,GAAP,OACR,QAAC,IAAD,CAAUC,GAAKV,EAASQ,EAAKG,KAAMN,UAAU,OAAOO,IAAKJ,EAAKK,MAAOX,GAAIY,EAAAA,EAAY,cAAaN,EAAKK,QACrG,QAAC,EAAAE,EAAD,CACEC,QAAmB,IAAVP,EAAA,eACTQ,MAAOT,EAAKU,MAAMC,gBAAgBC,gBAClCC,IAAI,MAEN,oBAAOb,EAAKK,YAIhB,eAAKX,GAAI,CAAEoB,QAAS,IAApB,+F,eCjFZ,MC+Be,YAA0E,IAA7CC,EAA4C,EAA5CA,SAAaC,GAA+B,YACtF,OAAO,gBAAC,EAAaA,EAAQD,K,8FCiD/B,IA/E+D,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAUb,EAAb,EAAaA,GAAOc,GAApB,mBAC7D,QAAC,EAAAC,KAAD,eACEf,GAAIA,EACJR,GAAI,CACFwB,SAAS,WAET,QAAS,CACPA,SAAS,sBACTC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAER,eAAgB,CACdJ,SAAS,WACTK,QAAQ,KACRJ,IAAK,EACLG,KAAM,EACNF,MAAO,EACPC,OAAQ,EACRG,OAAQ,EACRC,WAAW,uEAEb,cAAe,CACbP,SAAS,WACTK,QAAQ,KACRJ,IAAK,EACLG,KAAM,EACNF,MAAO,EACPC,OAAQ,EACRK,UAAW,SAACC,GAAD,0BAA0BC,EAAAA,EAAAA,IAAID,EAAD,iBACxCE,WAAW,wBAEb,YAAa,CACXA,WAAW,+BAEb,SAAU,CACRL,OAAQ,GACRM,MAAM,QACNZ,SAAS,WACTI,KAAM,EACNF,MAAO,EACPW,UAAU,QACVC,WAAW,OACXC,SAAU,CAAC,EAAG,EAAG,GACjBnB,QAAS,EACToB,WAAW,gCAEb,UAAW,CACT,YAAa,CACXC,UAAU,gBAGd,UAAW,CACTC,QAAQ,OACR,cAAe,CACbV,UAAW,SAACC,GAAD,0BAA0BC,EAAAA,EAAAA,IAAID,EAAD,iBACxCH,OAAQ,KAGZ,qDAAsD,CACpD,UAAW,CACT,YAAa,CACXW,UAAU,YAEZ,cAAe,CACbT,UAAW,SAACC,GAAD,0BAA0BC,EAAAA,EAAAA,IAAID,EAAD,iBACxCH,OAAQ,MAIda,QAAQ,cAENrB,GAEHD,K,kBC1EL,IANgB,CACduB,KAAK,OACLxD,SAAS,WACTyD,UAAU,c,2ECDL,IAAMzC,EAA0C,CACrD,aAAc,CACZ0C,QAAQ,OACRC,aAAa,QAEf,sCAAuC,CACrC,aAAc,CAAEC,oBAAoB,6BACpC,wVACE,CACEC,WAAW,kBAGjB,wCAAyC,CACvC,aAAc,CAAED,oBAAoB,6BACpC,uTACE,CACEE,QAAQ,iBAEZ,qwBACE,CACED,WAAW,iBAEf,2jBACE,CACEA,WAAW,mBAKNrC,EAA+B,CAC1CuC,UAAW,CAAC,QAAD,W,mCCTN,SAASC,EACZlE,EACAmE,GAEF,OAAOnE,EAAKoE,QAAO,SAACC,GAAD,OAAOF,EAAWG,SAASD,EAAEE,SAwBlD,IArBA,SACIvE,EACAwE,GAGF,YAFe,IADbA,IAAAA,EAAWN,GAGNM,EAASxE,EAAM,EADXW,EAAAA,EAAAA,WACiBC,OAAQ,S,qBCnCvB,SAAS6D,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIlD,EAAKX,EAFL+D,EAAS,GACTC,EAAaC,OAAOC,KAAKL,GAG7B,IAAK7D,EAAI,EAAGA,EAAIgE,EAAWrE,OAAQK,IACjCW,EAAMqD,EAAWhE,GACb8D,EAASK,QAAQxD,IAAQ,IAC7BoD,EAAOpD,GAAOkD,EAAOlD,IAGvB,OAAOoD,E","sources":["webpack://jodie/./src/@lekoarts/gatsby-theme-jodie/components/homepage.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie-core/src/templates/homepage-query.tsx","webpack://jodie/./src/@lekoarts/gatsby-theme-jodie/@lekoarts/gatsby-theme-jodie-core/components/homepage.tsx","webpack://jodie/./src/@lekoarts/gatsby-theme-jodie/components/grid-item.tsx","webpack://jodie/./src/@lekoarts/gatsby-theme-jodie/locales/index.ts","webpack://jodie/./src/@lekoarts/gatsby-theme-jodie/styles/item-list.ts","webpack://jodie/./src/@lekoarts/gatsby-theme-jodie/utils/modify-grid.ts","webpack://jodie/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport * as React from \"react\"\r\nimport { PageProps } from \"gatsby\"\r\nimport { IGatsbyImageData, GatsbyImage } from \"gatsby-plugin-image\"\r\nimport Layout from \"./layout\"\r\nimport GridItem from \"./grid-item\"\r\nimport { itemListWrapperStyles, itemStyles } from \"../styles/item-list\"\r\nimport locales from \"../locales\"\r\nimport { visuallyHidden } from \"../styles/utils\"\r\nimport modifyGrid from \"../utils/modify-grid\"\r\n\r\nimport { useIntl } from \"gatsby-plugin-intl\"\r\n\r\ntype DataProps = {\r\n  projects: {\r\n    nodes: {\r\n      lang: string\r\n      slug: string\r\n      title: string\r\n      cover: {\r\n        childImageSharp: {\r\n          gatsbyImageData: IGatsbyImageData\r\n        }\r\n      }\r\n      __typename: \"MdxProject\"\r\n    }[]\r\n  }\r\n  pages: {\r\n    nodes: {\r\n      lang: string\r\n      slug: string\r\n      title: string\r\n      cover: {\r\n        childImageSharp: {\r\n          gatsbyImageData: IGatsbyImageData\r\n        }\r\n      }\r\n      __typename: \"MdxPage\"\r\n    }[]\r\n  }\r\n}\r\n\r\nconst Homepage: React.FC<PageProps<DataProps>> = ({ data: { pages, projects } }) => {\r\n  const rawItems = [...pages.nodes, ...projects.nodes]\r\n  const items = modifyGrid(rawItems)\r\n  const itemsCount = items.length\r\n  let divisor = 9\r\n  \r\n  // Making useIntl available in the code\r\n  const intl = useIntl()\r\n  // Use language iso for the routes\r\n  const locale = intl.locale !== \"es\" ? `/${intl.locale}` : \"\"\r\n\r\n  for (let i = 0; i < itemsCount; i++) {\r\n    const quotient = itemsCount % divisor\r\n    const quotientAlt = (itemsCount - 1) % divisor\r\n\r\n    if (quotient === 0 || quotientAlt === 0) {\r\n      break\r\n    }\r\n\r\n    divisor -= 1\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 sx={visuallyHidden} data-testid=\"page-title\">\r\n        {locales.home}\r\n      </h1>\r\n      <div className={`item-list-wrapper`} sx={itemListWrapperStyles}>\r\n        <div className={`item-list div${divisor}`}>\r\n          {items.length > 0 ? (\r\n            items.map((item, index) => (\r\n              <GridItem to={ locale + item.slug} className=\"item\" key={item.title} sx={itemStyles} data-testid={item.title}>\r\n                <GatsbyImage\r\n                  loading={index === 0 ? `eager` : `lazy`}\r\n                  image={item.cover.childImageSharp.gatsbyImageData}\r\n                  alt=\"\"\r\n                />\r\n                <span>{item.title}</span>\r\n              </GridItem>\r\n            ))\r\n          ) : (\r\n            <div sx={{ padding: 3 }}>\r\n              No projects and pages found at the locations defined for \"projectsPath\" and \"pagesPath\"\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\nexport default Homepage\r\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query ($homepagePageLimit: Int!, $homepageProjectLimit: Int!) {\n    pages: allPage(sort: { fields: title, order: ASC }, limit: $homepagePageLimit) {\n      nodes {\n        slug\n        lang\n        title\n        cover {\n          childImageSharp {\n            gatsbyImageData(width: 1200, quality: 90)\n          }\n        }\n        __typename\n      }\n    }\n    projects: allProject(sort: { fields: date, order: DESC }, limit: $homepageProjectLimit) {\n      nodes {\n        slug\n        lang\n        title: shortTitle\n        cover {\n          childImageSharp {\n            gatsbyImageData(width: 1200, quality: 90)\n          }\n        }\n        __typename\n      }\n    }\n  }\n`\n","import * as React from \"react\"\r\nimport { PageProps } from \"gatsby\"\r\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\r\nimport Homepage from \"../../../components/homepage\"\r\n\r\ntype DataProps = {\r\n  projects: {\r\n    nodes: {\r\n      lang: string\r\n      slug: string\r\n      title: string\r\n      cover: {\r\n        childImageSharp: {\r\n          gatsbyImageData: IGatsbyImageData\r\n        }\r\n      }\r\n      __typename: \"MdxProject\"\r\n    }[]\r\n  }\r\n  pages: {\r\n    nodes: {\r\n      lang: string\r\n      slug: string\r\n      title: string\r\n      cover: {\r\n        childImageSharp: {\r\n          gatsbyImageData: IGatsbyImageData\r\n        }\r\n      }\r\n      __typename: \"MdxPage\"\r\n    }[]\r\n  }\r\n}\r\n\r\nexport default function JodieCoreHomepage({ children, ...props }: PageProps<DataProps>) {\r\n  return <Homepage {...props}>{children}</Homepage>\r\n}\r\n","/** @jsx jsx */\r\nimport { jsx, get } from \"theme-ui\"\r\nimport * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst GridItem: React.FC<{ to: string; className?: string }> = ({ children, to, ...props }) => (\r\n  <Link\r\n    to={to}\r\n    sx={{\r\n      position: `relative`,\r\n      // @ts-ignore\r\n      \"> div\": {\r\n        position: `absolute !important`,\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n      },\r\n      \"> div:before\": {\r\n        position: `absolute`,\r\n        content: `''`,\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        zIndex: 5,\r\n        background: `linear-gradient(45deg, rgba(22,22,22,0) 75%, rgba(0,0,0,0.35) 100%)`,\r\n      },\r\n      \"> div:after\": {\r\n        position: `absolute`,\r\n        content: `''`,\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        boxShadow: (t) => `inset 0 0 0 0px ${get(t, `colors.white`)}`,\r\n        transition: `all 0.3s ease-in-out`,\r\n      },\r\n      \"> div img\": {\r\n        transition: `all 0.3s ease 0s !important`,\r\n      },\r\n      \"> span\": {\r\n        zIndex: 10,\r\n        color: `white`,\r\n        position: `absolute`,\r\n        left: 0,\r\n        right: 0,\r\n        textAlign: `right`,\r\n        fontWeight: `bold`,\r\n        fontSize: [3, 3, 4],\r\n        padding: 3,\r\n        textShadow: `0 1px 4px rgba(0, 0, 0, 0.5)`,\r\n      },\r\n      \"&:hover\": {\r\n        \"> div img\": {\r\n          transform: `scale(1.05)`,\r\n        },\r\n      },\r\n      \"&:focus\": {\r\n        outline: `none`,\r\n        \"> div:after\": {\r\n          boxShadow: (t) => `inset 0 0 0 7px ${get(t, `colors.white`)}`,\r\n          zIndex: 10,\r\n        },\r\n      },\r\n      \"@media screen and (prefers-reduced-motion: reduce)\": {\r\n        \"&:hover\": {\r\n          \"> div img\": {\r\n            transform: `scale(1)`,\r\n          },\r\n          \"> div:after\": {\r\n            boxShadow: (t) => `inset 0 0 0 7px ${get(t, `colors.white`)}`,\r\n            zIndex: 10,\r\n          },\r\n        },\r\n      },\r\n      variant: `grid-item`,\r\n    }}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </Link>\r\n)\r\n\r\nexport default GridItem\r\n","const locales = {\r\n  home: `Home`,\r\n  projects: `Projects`,\r\n  instagram: `Instagram`,\r\n}\r\n\r\nexport default locales\r\n","import type { ThemeUICSSObject } from \"theme-ui\"\r\n\r\nexport const itemListWrapperStyles: ThemeUICSSObject = {\r\n  \".item-list\": {\r\n    display: `grid`,\r\n    gridAutoRows: `auto`,\r\n  },\r\n  \"@media screen and (min-width: 40em)\": {\r\n    \".item-list\": { gridTemplateColumns: `repeat(2, minmax(0, 1fr))` },\r\n    \".div2 .item,.div3 .item:nth-of-type(3n+1),.div4 .item:nth-of-type(4n+1),.div4 .item:nth-of-type(4n+4),.div5 .item:nth-of-type(5n+1),.div6 .item:nth-of-type(3n+1),.div7 .item:nth-of-type(7n+1),.div7 .item:nth-of-type(7n+4),.div7 .item:nth-of-type(7n+7),.div8 .item:nth-of-type(4n+1),.div8 .item:nth-of-type(4n+4),.div9 .item:nth-of-type(3n+1)\":\r\n      {\r\n        gridColumn: `auto / span 2`,\r\n      },\r\n  },\r\n  \"@media screen and (min-width: 1280px)\": {\r\n    \".item-list\": { gridTemplateColumns: `repeat(3, minmax(0, 1fr))` },\r\n    \".div4 .item:nth-of-type(12n+2),.div4 .item:nth-of-type(12n+11),.div5 .item:nth-of-type(15n+2),.div5 .item:nth-of-type(15n+13),.div7 .item:nth-of-type(7n+2),.div7 .item:nth-of-type(7n+6),.div8 .item:nth-of-type(12n+2),.div8 .item:nth-of-type(12n+11),.div9 .item:nth-of-type(9n+2),.div9 .item:nth-of-type(9n+7)\":\r\n      {\r\n        gridRow: `auto / span 2`,\r\n      },\r\n    \".div3 .item:nth-of-type(6n+3),.div3 .item:nth-of-type(6n+5),.div4 .item:nth-of-type(12n+3),.div4 .item:nth-of-type(12n+4),.div4 .item:nth-of-type(12n+10),.div4 .item:nth-of-type(12n+12),.div5 .item:nth-of-type(15n+3),.div5 .item:nth-of-type(15n+4),.div5 .item:nth-of-type(15n+12),.div5 .item:nth-of-type(15n+14),.div6 .item:nth-of-type(12n+6),.div6 .item:nth-of-type(12n+11),.div7 .item:nth-of-type(7n+3),.div7 .item:nth-of-type(7n+4),.div7 .item:nth-of-type(7n+5),.div7 .item:nth-of-type(7n+7),.div8 .item:nth-of-type(12n+3),.div8 .item:nth-of-type(12n+4),.div8 .item:nth-of-type(12n+10),.div8 .item:nth-of-type(12n+12),.div9 .item:nth-of-type(9n+3),.div9 .item:nth-of-type(9n+4),.div9 .item:nth-of-type(9n+5),.div9 .item:nth-of-type(9n+8),.div9 .item:nth-of-type(9n+9)\":\r\n      {\r\n        gridColumn: `auto / span 2`,\r\n      },\r\n    \".div2 .item,.div3 .item:nth-of-type(6n+1),.div3 .item:nth-of-type(6n+4),.div4 .item:nth-of-type(12n+1),.div4 .item:nth-of-type(12n+5),.div4 .item:nth-of-type(12n+9),.div5 .item:nth-of-type(15n+1),.div5 .item:nth-of-type(15n+5),.div5 .item:nth-of-type(15n+6),.div5 .item:nth-of-type(15n+10),.div5 .item:nth-of-type(15n+11),.div5 .item:nth-of-type(15n+15),.div6 .item:nth-of-type(12n+1),.div6 .item:nth-of-type(12n+7),.div7 .item:nth-of-type(7n+1),.div8 .item:nth-of-type(12n+1),.div8 .item:nth-of-type(12n+5),.div8 .item:nth-of-type(12n+9),.div9 .item:nth-of-type(9n+1)\":\r\n      {\r\n        gridColumn: `auto / span 3`,\r\n      },\r\n  },\r\n}\r\n\r\nexport const itemStyles: ThemeUICSSObject = {\r\n  minHeight: [`500px`, `700px`],\r\n}\r\n","import { IGatsbyImageData } from \"gatsby-plugin-image\"\r\n//import { filterByLang } from \"./resolver-templates\";\r\n//import { filterBySlug } from \"@lekoarts/gatsby-theme-jodie/src/utils/resolver-templates\";\r\nimport { useIntl } from \"gatsby-plugin-intl\"\r\n\r\nexport interface IGridItem {\r\n  lang: string\r\n  slug: string\r\n  title: string\r\n  shortTitle: string\r\n  cover: {\r\n    childImageSharp: {\r\n      gatsbyImageData: IGatsbyImageData\r\n    }\r\n  }\r\n  __typename: \"MdxProject\" | \"MdxPage\"\r\n}\r\n\r\n\r\nfunction defaultResolver(data: IGridItem[]): IGridItem[] {\r\n  return data\r\n}\r\n\r\nexport function filterByLang(\r\n    data: IGridItem[],\r\n    langFilter: string[]\r\n  ) {\r\n  return data.filter((d) => langFilter.includes(d.lang))\r\n}\r\n\r\nfunction modifyGrid(\r\n    data: IGridItem[],\r\n    resolver = filterByLang\r\n  ): IGridItem[] {\r\n  let intl = useIntl()\r\n  return resolver(data, [intl.locale, null])\r\n}\r\n\r\n\r\n/**\r\n * Examples:\r\n *\r\n * You can import the onlyPages() function to filter out everything but pages:\r\n *\r\n * const modifyGrid = data => onlyPages(data)\r\n *\r\n * You can also do more sophisticated filtering, like the filterBySlug() function that also takes in a second parameter (an array of slugs)\r\n * You'll need to pass the data in the second argument:\r\n *\r\n * const modifyGrid = (data) => filterBySlug(data, [\"/about\"])\r\n */\r\nexport default modifyGrid","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["data","pages","projects","rawItems","nodes","items","modifyGrid","itemsCount","length","divisor","intl","useIntl","locale","i","sx","visuallyHidden","locales","className","itemListWrapperStyles","map","item","index","to","slug","key","title","itemStyles","G","loading","image","cover","childImageSharp","gatsbyImageData","alt","padding","children","props","Link","position","top","right","bottom","left","content","zIndex","background","boxShadow","t","get","transition","color","textAlign","fontWeight","fontSize","textShadow","transform","outline","variant","home","instagram","display","gridAutoRows","gridTemplateColumns","gridColumn","gridRow","minHeight","filterByLang","langFilter","filter","d","includes","lang","resolver","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","indexOf"],"sourceRoot":""}